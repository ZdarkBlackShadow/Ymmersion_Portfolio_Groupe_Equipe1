[
    {
        "id": 1,
        "name": "Epreuve 1",
        "description": "A l'aide des langages HTML et CSS uniquement, vous devez reproduire le dessin suivant.",
        "image": "ImageEpreuve1.png",
        "ExempleRendu": "",
        "codeGo" : "",
        "codeHtml": "<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"utf-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <title></title>\n        <meta name=\"description\" content=\"\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <link rel=\"stylesheet\" href=\"./style.css\">\n    </head>\n    <body>\n        <div class=\"font\">\n            <div class=\"oeil\">\n                <span></span>\n                <span></span>\n            </div>\n            <span class=\"nez\"></span>\n            <span class=\"bouche\"></span>\n            <div class=\"coinBouche\">\n                <span></span>\n                <span></span>\n            </div>\n        </div>\n        <p>\n            Minecraft\n        </p>\n        <script src=\"\" async defer></script>\n    </body>\n</html>",
        "codeCss": "body {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 600px;\n}\n\n.font {\n    background-color: rgb(22, 215, 22);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 300px;\n}\n\n.oeil {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 50px;\n    width: 160px;\n}\n\n.oeil > span {\n    height: 50px;\n    width: 50px;\n    background-color: black;\n    border-color: black;\n}\n\n.nez {\n    width: 60px;\n    height: 30px;\n    background-color: black;\n}\n\n.bouche {\n    width: 120px;\n    height: 60px;\n    background-color: black;\n}\n\n.coinBouche {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 50px;\n    width: 120px;\n}\n\n.coinBouche > span {\n    width: 30px;\n    height: 30px;\n    background-color: black;\n}\n\np {\n    font-size: 2em;\n    font-family: Arial, Helvetica, sans-serif;\n}",
        "finalResult": "imagefinaleepreuve1.png",
        "finalResultCode": "",
        "timerInMinute" : 20,
        "when": "Lundi 11H",
        "learningLesson":[]
    },
    {
        "id":2,
        "name":"Epreuve 2",
        "description":"√âcrivez un programme en Go qui g√©n√®re un nombre al√©atoire entre 1 et 99. L'utilisateur entre un chiffre, et le programme lui indique si c'est plus grand ou plus petit, jusqu'√† trouver la bonne r√©ponse.",
        "image":"",
        "ExempleRendu":"Bienvenue dans le jeu de devinettes !\nJe pense √† un nombre entre 1 et 100. Pouvez-vous le deviner ?\nEntrez votre devinette : 30\nC'est plus grand !\nEntrez votre devinette : 50\nC'est plus grand !\nEntrez votre devinette : 70\nC'est plus grand !\nEntrez votre devinette : 80\nC'est plus grand !\nEntrez votre devinette : 99\nC'est plus petit !\nEntrez votre devinette : 90\nC'est plus grand !\nEntrez votre devinette : 92\nC'est plus grand !\nEntrez votre devinette : 94\nC'est plus petit !\nEntrez votre devinette : 93\nBravo! Vous avez trouv√© le nombre 93 en 9 tentatives.",
        "codeGo":"package main\n\nimport (\n    \"fmt\"\n    \"math/rand\"\n    \"time\"\n)\n\nfunc main() {\n    var Find bool = false\n    var tentative int = 1\n    rand.Seed(time.Now().Unix())\n    Num := rand.Intn(100)\n    fmt.Println(\"Bienvenue dans le jeu de devinettes !\\nJe pense √† un nombre entre 1 et 99. Pouvez-vous le devinez ?\")\n    for !Find {\n        var Data int\n        fmt.Scanln(&Data)\n        if Data < Num {\n            fmt.Println(\"C'est plus grand\")\n        } else if Data == Num {\n            fmt.Printf(\"Bravo ! Vous avez trouv√© le code en %d tentatives\\n\", tentative)\n            Find = true\n        } else {\n            fmt.Println(\"C'est plus petit\")\n        }\n        tentative += 1\n    }\n}",
        "codeHtml":"",
        "codeCss":"",
        "finalResult":"",
        "finalResultCode":"Bienvenue dans le jeu de devinettes !\nJe pense √† un nombre entre 1 et 99. Pouvez-vous le devinez ?\n2\nC'est plus grand\n80\nC'est plus petit\n60\nC'est plus grand\n70\nC'est plus grand\n75\nC'est plus petit\n73\nC'est plus petit\n72\nBravo ! Vous avez trouv√© le code en 7 tentatives",
        "timerInMinute":20,
        "when":"Lundi 14H40",
        "learningLesson":["Les comparaisons avec le 'if' et les 'else'.","Comment demander √† l'utilisateur un nombre avec la fonction 'scanln'.", "L'utilisation de 'printf' avec le formatage de donn√©es.", "L'utilisation d'une variable qui augmente a chaque tour de boucle.", "La g√©n√©ration d'un nombre al√©atoire entre 1 et 100.", "Les boucles avec des conditions d'arr√™t."]
    },
    {
        "id":3,
        "name":"Epreuve 3",
        "description":"En Golang, cr√©er un programme qui g√©n√®re un mot de passe al√©atoire de 8 √† 16 caract√®res avec des majuscules, minuscules, et chiffres.",
        "image":"",
        "ExempleRendu":"G√©n√©rateur de mot de passe s√©curis√©\nEntrez la longueur du mot de passe (min 8, max 16) : 12\nMot de passe g√©n√©r√© : mxKZ10cVr1tP",
        "codeGo":"package main\n\nimport (\n    \"fmt\"\n    \"math/rand\"\n    \"time\"\n)\n\nfunc main() {\n    fmt.Println(\"Entrez la longueur du mot de passe (Entre 8 et 16):\")\n    var input int\n    var mdp string\n    fmt.Scanln(&input)\n    if input < 8 || input > 16 {\n        fmt.Println(\"Longueur du mot de passe erronn√©e !\")\n    } else {\n        rand.Seed(time.Now().UnixNano())\n        var letters = []rune(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n        var digits = []rune(\"0123456789\")\n        var password []rune\n        for len(password) < input {\n            password = append(password, letters[rand.Intn(len(letters))])\n            password = append(password, digits[rand.Intn(len(digits))])\n        }\n        password = append(password, letters[rand.Intn(len(letters))])\n        password = append(password, digits[rand.Intn(len(digits))])\n        mdp = string(password)\n        fmt.Printf(\"Votre mot de passe g√©n√©r√© est: %s\\n\", mdp)\n    }\n}",
        "codeHtml":"",
        "codeCss":"",
        "finalResult":"",
        "finalResultCode":"Entrez la longueur du mot de passe (Entre 8 et 16):\n9\nVotre mot de passe g√©n√©r√© est: I0q4l1K5t1o8",
        "timerInMinute":20,
        "when":"Mercredi 5 F√©vrier 2025 √† 10H00",
        "learningLesson":["J'ai pu faire ressortir de mes souvenirs l'utilisation de la fonction rand(), ainsi que append. Deux fonctions bien utile, mais qui ont donn√© du fil √† retordre √† ma m√©moire vieillissante ! "]
    },
    {
        "id":4,
        "name":"Epreuve 4",
        "description":"√âcrire un programme qui v√©rifie si un mot ou une phrase (sans espaces) est un palindrome (ex: 'radar', 'kayak').",
        "image":"",
        "ExempleRendu":"Bienvenue dans le jeu du Palindrome !\nEntrez un mot ou une phrase (ou tapez 'exit' pour quitter) :\n> Kayak\nC'est un palindrome !\n> radar\nC'est un palindrome !\n> Kheir-eddine\nCe n'est pas un palindrome.\n> Elle\nC'est un palindrome !",
        "codeGo":"package main\n\nimport (\n    \"bufio\"\n    \"fmt\"\n    \"os\"\n    \"strings\"\n)\n\n// Fonction pour v√©rifier si une cha√Æne est un palindrome\nfunc isPalindrome(s string) bool {\n    // Convertir en minuscules et enlever les espaces\n    s = strings.ToLower(strings.ReplaceAll(s, \" \", \"\"))\n\n    // Comparer les caract√®res en miroir\n    n := len(s)\n    for i := 0; i < n/2; i++ {\n        if s[i] != s[n-1-i] {\n            return false\n        }\n    }\n    return true\n}\n\nfunc main() {\n    scanner := bufio.NewScanner(os.Stdin)\n\n    fmt.Println(\"üîÑ Bienvenue dans le jeu du Palindrome !\")\n    fmt.Println(\"‚û°Ô∏è  Entrez un mot ou une phrase (ou tapez 'exit' pour quitter) :\")\n\n    for {\n        fmt.Print(\"> \")\n        scanner.Scan()\n        input := scanner.Text()\n\n        // V√©rifier si l'utilisateur veut quitter\n        if strings.ToLower(input) == \"exit\" {\n            fmt.Println(\"üëã Merci d'avoir jou√© ! √Ä bient√¥t !\")\n            break\n        }\n\n        // V√©rifier si le mot est un palindrome\n        if isPalindrome(input) {\n            fmt.Println(\"‚úÖ C'est un palindrome ! üéâ\")\n        } else {\n            fmt.Println(\"‚ùå Ce n'est pas un palindrome.\")\n        }\n    }\n}",
        "codeHtml":"",
        "codeCss":"",
        "finalResult":"",
        "finalResultCode":"üîÑ Bienvenue dans le jeu du Palindrome !\n‚û°Ô∏è  Entrez un mot ou une phrase (ou tapez 'exit' pour quitter) :\n> test\n‚ùå Ce n'est pas un palindrome.\n> kayak\n‚úÖ C'est un palindrome ! üéâ\n> exit\nüëã Merci d'avoir jou√© ! √Ä bient√¥t !",
        "timerInMinute":30,
        "when":"Jeudi 10H00",
        "learningLesson":[]
    },
    {
        "id":5,
        "name":"Epreuve 5",
        "description":"√âcrire un programme qui analyse un texte et qui affiche le nombre de mots, le nombre de caract√®res et le mot le plus long.",
        "image":"",
        "ExempleRendu":"Analyseur de Texte\nEntrez un texte (ou tapez 'exit' pour quitter) :\n > Bonjour je m'appel Kheir-Eddine Mederreg\nR√©sultats de l'analyse :\nNombre de mots : 5\nNombre de caract√®res (sans espaces) : 36\nMot le plus long : \"Kheir-Eddine\"\n> Voici un texte, analyse le\nR√©sultats de l'analyse :\nNombre de mots : 5\nNombre de caract√®res (sans espaces) : 22\nMot le plus long : \"analyse\"",
        "codeGo":"package main\n\nimport (\n    \"bufio\"\n    \"fmt\"\n    \"os\"\n    \"strings\"\n)\n\nfunc main() {\n    reader := bufio.NewReader(os.Stdin)\n\n    for {\n        fmt.Println(\"Entrez un texte (ou tapez 'exit' pour quitter) :\")\n        text, _ := reader.ReadString('\\n')\n        text = strings.TrimSpace(text)\n\n        if text == \"exit\" {\n            break\n        }\n\n        words := strings.Fields(text)\n        numWords := len(words)\n        numChars := 0\n        longestWord := \"\"\n\n        for _, word := range words {\n            numChars += len(word)\n            if len(word) > len(longestWord) {\n                longestWord = word\n            }\n        }\n\n        fmt.Println(\"R√©sultats de l'analyse :\")\n        fmt.Printf(\"  - Nombre de mots : %d\\n\", numWords)\n        fmt.Printf(\"  - Nombre de caract√®res (sans espaces) : %d\\n\", numChars)\n        fmt.Printf(\"  - Mot le plus long : \\\"%s\\\"\\n\", longestWord)\n    }\n}",
        "codeHtml":"",
        "codeCss":"",
        "finalResult":"",
        "finalResultCode":"Entrez un texte (ou tapez 'exit' pour quitter) :\nceci est une phrase\nR√©sultats de l'analyse :\n  - Nombre de mots : 4\n  - Nombre de caract√®res (sans espaces) : 16\n  - Mot le plus long : \"phrase\"\nEntrez un texte (ou tapez 'exit' pour quitter) :\nexit",
        "timerInMinute":30,
        "when":"Jeudi 10H00",
        "learningLesson":[]
    },
    {
        "id":6,
        "name":"Epreuve 6",
        "description":"√âcrire un programme qui √©value un mot de passe et affiche son niveau de s√©curit√© (faible, moyen, fort). Les crit√©res sont une longeurs sup√©rieur ou √©gale a 8, contient des chiffres, contient des lettres majuscules  et contient des symboles (!@#$%...)",
        "image":"",
        "ExempleRendu":"V√©rificateur de Force de Mot de Passe\nEntrez un mot de passe (ou tapez 'exit' pour quitter)\n> Motdepasse123&\nS√©curit√© : Fort (Bien s√©curis√©)\n> Motdepasse123\nS√©curit√© : ‚ñ≤ Moyen (Ajoutez des majuscules et des symboles)\n> Motdepasse\nS√©curit√© : X Faible (Trop court ou manque de diversit√©)\n",
        "codeGo":"package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n)\n\nfunc main() {\n    var input string\n    fmt.Print(\"Rentrez un mot de passe : \")\n    fmt.Scanln(&input)\n    CheckPasswd(input)\n}\n\nfunc CheckPasswd(passwd string) {\n    if len(passwd) < 8 {\n        fmt.Println(\"Le mot de passe n'est pas assez long (minimum 8 caract√®res)\")\n        return\n    }\n    score := 0\n    if strings.ContainsAny(passwd, \"0123456789\") {\n        score++\n    }\n    if strings.ContainsAny(passwd, \"abcdefghijklmnopqrstuvwxyz\") {\n        score++\n    }\n    if strings.ContainsAny(passwd, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") {\n        score++\n    }\n    if strings.ContainsAny(passwd, \"!@#$%^&*()-_=+[]{}|;:,.<>/?\") {\n        score++\n    }\n    switch score {\n    case 1:\n        fmt.Println(\"Le mot de passe est faible\")\n    case 2:\n        fmt.Println(\"Le mot de passe est moyen\")\n    default:\n        fmt.Println(\"Le mot de passe est fort\")\n    }\n}\n",
        "codeHtml":"",
        "codeCss":"",
        "finalResult":"",
        "finalResultCode":"Rentrez un mot de passe : S√©curit√©1!\nLe mot de passe est fort",
        "timerInMinute":20,
        "when":"Jeudi 11H00",
        "learningLesson":[]
    }
]